abs(B)
#4
A<-matrix(c(2,3,3,1,-2,1,3,-1,-2),nrow = 3,byrow = TRUE)
A
B<-matrix(c(5,-4,3),nrow = 3)
B
inv_A<-solve(A)
inv_A
inv_A%*%B
#5
x<-matrix(c(3,2,-1,1),nrow = 2,byrow = TRUE)
x
y<-matrix(c(1,4,0,0,1,-1),nrow = 2,byrow = TRUE)
y
#5-a
2*x
#5-b
x*x
#5-c
x%*%x*8
#5-d
y[1,2]
#5-e
y[,2:3]
#6
data("rivers")
View(rivers)
#6-a
mean(rivers)
median(rivers)
r<-table(rivers)
r
names(r)[which(r==max(r))] #mode
var(rivers)
sd(rivers)
Range=max(rivers)-min(rivers)
Range
IQR(rivers)
summary(rivers)
#6-b
length(rivers[rivers>=400 & rivers<=900])
#7
Age_Group<-c("50-54","55-59","60-64","65-69","70-74")
Rural_Male<-c(11.7,18.1,26.9,41.0,66.0)
Rural_Female<-c(8.7,11.7,20.3,30.9,54.3)
d1<-data.frame(Age_Group,Rural_Male,Rural_Female)
d1
#7-a-following both methods can be used
d2<-data.frame(Age_Group=c("50-54","55-59","60-64","65-69","70-74"),Urban_Male=c(15.4,24.3,37.0,54.6,71.1),Urban_Female=c(8.4,13.6,19.3,35.1,50.1))
d2
d1new<-merge(d1,d2)
d1new
#also this method can be used
cbind(d1,Urban_Male=c(15.4,24.3,37.0,54.6,71.1),Urban_Female=c(8.4,13.6,19.3,35.1,50.1))
#7-b
mean(d1new$Rural_Male);mean(d1new$Urban_Female)
?pnorm
#hypothesis testing
x<-c(20.70,27.46,22.15,19.85,21.29,24.75,20.75,22.91,25.34,20.33,21.54,21.08,22.14,19.56,21.10,18.04,24.12,19.95,19.72,18.28,16.26,17.46,20.53,22.12,25.06,22.44,19.08,19.88,21.39,22.33,25.79)
sum(x)
length(x)
mean(x)
ts<-(mean(x)-20)/(sqrt(6)/sqrt(31)) #calc test statistics
ts
?rnorm
qnorm(0.975) #probability for 95% C.I. for positive value
qnorm(0.975,mean = 0, sd = 1, lower.tail = FALSE)
qnorm(0.95) #probability for 90% C.I.
qnorm(0.995,lower.tail = TRUE) #probability for 99% C.I. for positive value
pnorm(120, 0,10,lower.tail = FALSE)
1- pnorm(120,0,10)
pnorm(120, 0,10)
pnorm(120, 0,100)
pnorm(120, 0, 10, lower.tail = FALSE)
pnorm(75, 0, 10)
pnorm(75, 0, 10, lower.tail = TRUE)
pnorm(75, 0, 10, lower.tail = FALSE)-pnorm(95, 0, 10)
pnorm(120, 100, 10, lower.tail = FALSE)
pnorm(120, 100, 10) #lower.tail = FALSE)
pnorm(120, 100, 10, lower.tail = FALSE)
pnorm(0.05)
pnorm(75, 100, 10)
pnorm(75, 100, 10, lower.tail = TRUE)
pnorm(75, 100, 10, lower.tail = FALSE)
pnorm(75, 100, 10, lower.tail = FALSE)-pnorm(95, 100, 10)
pnorm(120, 100, 10, lower.tail = FALSE)
pnorm(75, 100, 10)
pnorm(75, 100, 10, lower.tail = TRUE)
pnorm(95, 100, 10) - pnorm(75, 100, 10, lower.tail = FALSE)
pnorm(95, 100, 10) - pnorm(75, 100, 10)
pnorm(95, 100, 10, lower.tail = FALSE) - pnorm(75, 100, 10)
pnorm(120, 100, 10, lower.tail = FALSE)
S<-pnorm(120, 100, 10, lower.tail = FALSE)
E<-pnorm(120, 100, 10, lower.tail = TRUE)
S+E
?ztest
?z.test
install.packages()
install.packages(BSDA)
install.packages("BSDA")
library(BSDA)
?t.test
pnorm(120, 100, 10)
pnorm(75, 100, 10, lower.tail = TRUE)
?pnorm
install.packages("MASS")
library(MASS)
pnorm(120, 100, 10, lower.tail = FALSE)
(75, 100, 10, lower.tail = TRUE)
pnorm(75, 100, 10, lower.tail = TRUE)
pnorm(75, 100, 10, lower.tail = FALSE)
pnorm(95, 100, 10, lower.tail = FALSE) - pnorm(75, 100, 10)
pnorm(125, 100, 10, lower.tail = FALSE) - pnorm(100, 100, 10)
pnorm(125, 100, 10) - pnorm(100, 100, 10, lower.tail = FALSE)
pnorm(95, 100, 10) - pnorm(75, 100, 10, lower.tail = FALSE)
pnorm(75, 100, 10, lower.tail = FALSE) - pnorm(95, 100, 10)
pnorm(95, 100, 10) - pnorm(75, 100, 10, lower.tail = FALSE)
pnorm(95, 100, 10) - pnorm(75, 100, 10, lower.tail = TRUE)
pnorm(125, 100, 10) - pnorm(100, 100, 10)
?z.test
z.test(x = x,y = NULL,alternative = "two.sided",mu = 100,sigma.x = 10,sigma.y = NULL,conf.level = 0.95)
z.test(x,alternative = "one.sided",mu = 100,sigma.x = 10,conf.level = 0.95)
z.test(x,alternative = "greater",mu = 100,sigma.x = 10,conf.level = 0.95)
z.test(x,alternative = "less",mu = 100,sigma.x = 10,conf.level = 0.95)
#Q.2)
#a)
?t.test
#Q.2)
#a)
?qnorm
#Q.1)
#a)
pnorm(120, 100, 10, lower.tail = FALSE)
#b)
pnorm(75, 100, 10, lower.tail = TRUE)
#c)
pnorm(95, 100, 10) - pnorm(75, 100, 10, lower.tail = TRUE)
#c)
pnorm(95, 100, 10) - pnorm(75, 100, 10)
#c)
pnorm(95, 100, 10, lower.tail = FALSE) - pnorm(75, 100, 10, lower.tail = FALSE)
#c)
pnorm(95, 100, 10, lower.tail = FALSE) - pnorm(75, 100, 10)
#c)
pnorm(95, 100, 10) - pnorm(75, 100, 10, lower.tail = FALSE)
#c)
pnorm(95, 100, 10) - pnorm(75, 100, 10)
#Q.1)
#a)
1 - pnorm(120, 100, 10, lower.tail = FALSE)
#Q.1)
#a)
1 - pnorm(120, 100, 10, lower.tail = TRUE)
#Q.1)
#a)
1 - pnorm(120, 100, 10, lower.tail = TRUE)
#b)
pnorm(75, 100, 10, lower.tail = TRUE)
#c)
pnorm(95, 100, 10) - pnorm(75, 100, 10)
#d)
pnorm(125, 100, 10) - pnorm(100, 100, 10)
#e)
install.packages("BSDA")
library(BSDA)
?z.test
z.test(x = x,y = NULL,alternative = "two.sided",mu = 100,sigma.x = 10,sigma.y = NULL,conf.level = 0.95)
z.test(x,alternative = "greater",mu = 100,sigma.x = 10,conf.level = 0.95)
z.test(x,alternative = "less",mu = 100,sigma.x = 10,conf.level = 0.95)
#Q.2)
#a)
?qnorm
qnorm(x,100,10,lower.tail = TRUE)
#Q.1)
#a)
pnorm(120, 100, 10, lower.tail = TRUE)
#Q.1)
#a)
pnorm(120, 100, 10, lower.tail = FALSE)
#hypothesis testing
x<-c(20.70,27.46,22.15,19.85,21.29,24.75,20.75,22.91,25.34,20.33,21.54,21.08,22.14,19.56,21.10,18.04,24.12,19.95,19.72,18.28,16.26,17.46,20.53,22.12,25.06,22.44,19.08,19.88,21.39,22.33,25.79)
sum(x)
length(x)
mean(x)
ts<-(mean(x)-20)/(sqrt(6)/sqrt(31)) #calc test statistics
ts
?rnorm
qnorm(0.975) #probability for 95% C.I. for positive value
qnorm(0.975,mean = 0, sd = 1, lower.tail = FALSE)
qnorm(0.95) #probability for 90% C.I.
qnorm(0.995,lower.tail = TRUE) #probability for 99% C.I. for positive value
qnorm(0.995,lower.tail = FALSE)
#p(z<0.5)
pnorm(0.5)
pnorm(0.0) #p(z<0.0)
pnorm(1.645)
pnorm(2.576)
z.test
z.test(x = x, y = NULL, mu = 20, sigma.x = sqrt(6), sigma.y = NULL, conf.level = 0.95)
z.test(x, mu = 20, sigma.x = sqrt(6), conf.level = 0.95) #same as above code
#ex2
tst<-(105-100)/(40/sqrt(100))
tst
qnorm(0.99,lower.tail = TRUE)
x<-c(120,75,95,125,100)
z.test(x = x,y = NULL,alternative = "two.sided",mu = 100,sigma.x = 10,sigma.y = NULL,conf.level = 0.95)
z.test(x,100,10,conf.level = 0.975)
z.test(x,alternative = "two.sided",100,10,conf.level = 0.95)
z.test(x = x,y = NULL,alternative = "two.sided",mu = 100,sigma.x = 10,sigma.y = NULL,conf.level = 0.95)
qnorm(0.975) #probability for 95% C.I. for positive value
qnorm(0.975,mean = 0, sd = 1, lower.tail = FALSE)
qnorm(0.95) #probability for 90% C.I.
qnorm(0.995,lower.tail = TRUE) #probability for 99% C.I. for positive value
#e)
qnorm(0.95)
qnorm(0.95,lower.tail = TRUE)
qnorm(0.975,lower.tail = TRUE)
qnorm(0.975,lower.tail = FALSE)
?qnorm
#e)
qnorm(0.95, 100, 10)
qnorm(0.975,100, 10, lower.tail = TRUE)
qnorm(0.975,lower.tail = FALSE)
qnorm(0.975,100, 10,lower.tail = FALSE)
#e)
qnorm(0.05, 100, 10)
qnorm(0.025,100, 10, lower.tail = TRUE)
#e)
qnorm(0.05, 100, 10, lower.tail = TRUE)
qnorm(0.025,100, 10, lower.tail = TRUE)
qnorm(0.975,100, 10,lower.tail = FALSE)
qnorm(0.975,100, 10,lower.tail = TRUE)
qnorm(0.025,100, 10, lower.tail = FALSE)
qnorm(0.975,100, 10, lower.tail = FALSE)
qnorm(0.975) #probability for 95% C.I. for positive value
qnorm(0.975,mean = 0, sd = 1, lower.tail = FALSE)
#e)
qnorm(0.975, 100, 10, lower.tail = TRUE)
qnorm(0.975,100, 10, lower.tail = FALSE)
qnorm(0.025,100, 10, lower.tail = FALSE)
qnorm(0.025,100, 10, lower.tail = TRUE)
FALSE
qnorm(0.025,100, 10, lower.tail = FALSE)
#e)
qnorm(0.975, 100, 10)
qnorm(0.025,100, 10, lower.tail = FALSE)
qnorm(0.95,100, 10,lower.tail = TRUE)
qnorm(0.95,100, 10,lower.tail = TRUE)
qnorm(0.95,100, 10,lower.tail = FALSE)
#e)
qnorm(0.975, 100, 10) #two tailed positive Critical Value
qnorm(0.025,100, 10, lower.tail = FALSE) #two tailed negative Critical
qnorm(0.95,100, 10,lower.tail = TRUE) #
qnorm(0.95,100, 10,lower.tail = FALSE) #
#e)
qnorm(0.975, 100, 10) #two tailed positive Critical Value
qnorm(0.025,100, 10, lower.tail = FALSE) #two tailed negative Critical
qnorm(0.95,100, 10,lower.tail = TRUE) #single tailed
#Q.1)
#a)
pnorm(120, 100, 10, lower.tail = FALSE)
#b)
pnorm(75, 100, 10, lower.tail = TRUE)
#c)
pnorm(95, 100, 10) - pnorm(75, 100, 10)
#d)
pnorm(125, 100, 10) - pnorm(100, 100, 10)
#e)
qnorm(0.975, 100, 10) #two tailed positive Critical Value
qnorm(0.025,100, 10, lower.tail = FALSE) #two tailed negative Critical
qnorm(0.95,100, 10,lower.tail = TRUE) #single tailed
#Q.2)
#a)
?t.test
pt(-2,10)
pt(-2,10,lower.tail = FALSE)
pt(0, 10, lower.tail = FALSE)
pt(2, 10) - pt(-1, 10)
?qt
qt(0.1, 10)
qt(0.01, 10)
qt(0.05, 10)
qt(0.05, 10)
qt(0.005, 10)
qt(0.025, 10)
qt(0.95, 10)
qt(0.995, 10)
qt(0.975, 10)
qt(0.025, 10) #lower value for two-side tailed
qt(0.975, 10)
#Q.1)
#a)
pnorm(120, 100, 10, lower.tail = FALSE)
#b)
pnorm(75, 100, 10, lower.tail = TRUE)
#c)
pnorm(95, 100, 10) - pnorm(75, 100, 10)
#d)
pnorm(125, 100, 10) - pnorm(100, 100, 10)
#e)
qnorm(0.975, 100, 10) #two tailed positive Critical Value
qnorm(0.025,100, 10, lower.tail = FALSE) #two tailed negative Critical
qnorm(0.95,100, 10,lower.tail = TRUE) #single tailed
#Q.2)
#a)
pt(-2,10,lower.tail = FALSE)
#b)
pt(0, 10, lower.tail = FALSE)
#c)
pt(2, 10) - pt(-1, 10)
#d)
qt(0.1, 10) #values for one-tailed
qt(0.01, 10) #values for one-tailed
qt(0.05, 10) #values for one-tailed
qt(0.05, 10) #lower value for two-side tailed
qt(0.95, 10) #upper value for two-side tailed
qt(0.005, 10) #lower value for two-side tailed
qt(0.995, 10) #upper value for two-side tailed
qt(0.025, 10) #lower value for two-side tailed
qt(0.975, 10) #upper value for two-side tailed
#Q.1)
#a)
pnorm(120, 100, 10, lower.tail = FALSE)
#b)
pnorm(75, 100, 10, lower.tail = TRUE)
#c)
pnorm(95, 100, 10) - pnorm(75, 100, 10)
#d)
pnorm(125, 100, 10) - pnorm(100, 100, 10)
#e)
qnorm(0.95,100, 10,lower.tail = TRUE) #single tailed
qnorm(0.975, 100, 10) #two tailed positive Critical Value
qnorm(0.025,100, 10, lower.tail = FALSE) #two tailed negative Critical
#Q.2)
#a)
pt(-2,10,lower.tail = FALSE)
#b)
pt(0, 10, lower.tail = FALSE)
#c)
pt(2, 10) - pt(-1, 10)
#d)
qt(0.1, 10) #values for one-tailed
qt(0.01, 10) #values for one-tailed
qt(0.05, 10) #values for one-tailed
qt(0.05, 10) #lower value for two-side tailed
qt(0.95, 10) #upper value for two-side tailed
qt(0.005, 10) #lower value for two-side tailed
qt(0.995, 10) #upper value for two-side tailed
qt(0.025, 10) #lower value for two-side tailed
qt(0.975, 10) #upper value for two-side tailed
#d)
hist(iris$Petal.Length, main = "Histogram of Petal Length", xlab = "Values", ylab = "Frequency", xlim = c(0,7), ylim = c(0,60),breaks = 7, col = heat.colors(7), border = "blue" )
#d)
hist(iris$Petal.Length, main = "Histogram of Petal Length", xlab = "Values", ylab = "Frequency", xlim = c(0,7), ylim = c(0,50),breaks = 7, col = heat.colors(7), border = "blue" )
#d)
hist(iris$Petal.Length, main = "Histogram of Petal Length", xlab = "Values", ylab = "Frequency", xlim = c(0,7), ylim = c(0,50),breaks = 7, col = terrain.colors(7) )
#e)
boxplot(iris$Petal.Width, main = "Box plot for Petal Width", ylab="Values", col="blue", border = "red", notch = TRUE, varwidth = TRUE )
#e)
boxplot(iris$Petal.Width, main = "Box plot for Petal Width", ylab="Values",  border = "red", notch = TRUE, varwidth = TRUE )
barplot(x, main = "Number of Articles Bought Chart", xlab = "Month", ylab = "Articles",names.arg = y,  col = rainbow(length(x)), ylim = c(0,40))
#Q2-a
x<-c(17,15,22,24,13,20,25,12,38,32,14,15)
y<-c("January","February","March","April","May","June","July","August","September","October","November","December")
barplot(x, main = "Number of Articles Bought Chart", xlab = "Month", ylab = "Articles",names.arg = y,  col = rainbow(length(x)), ylim = c(0,40))
plot(x, type = "o", col = "red", main = "Number of Articles Bought Line Chart",xlab = "Month", ylab = "Articles", ylim = c(10,40) )
plot(x, type = "o", col = "red", main = "Number of Articles Bought Line Chart",xlab = "Month", ylab = "Articles", ylim = c(0,40) )
#Q2-b
piepercent<-round(100*x/sum(x), 1)
lbl<-paste(paste(y,piepercent), "%", sep="")
pie(x, main = "Number of Articles Bought Pie Chart", clockwise = TRUE,labels = lbl ,radius = 1, col = heat.colors(length(x)) )
pie(x, main = "Number of Articles Bought Pie Chart", clockwise = TRUE,labels = lbl ,radius = 0.8, col = heat.colors(length(x)) )
plot(x, type = "o", col = "red", main = "Number of Articles Bought Line Chart",xlab = "Month", ylab = "Articles", ylim = c(10,40) )
plot(x, type = "o", col = "red", main = "Number of Articles Bought Line Chart",xlab = "Month", ylab = "Articles", ylim = c(0,40),xlim = 12 )
plot(x, type = "o", col = "red", main = "Number of Articles Bought Line Chart",xlab = "Month", ylab = "Articles", ylim = c(0,40),xlim = length(x) )
plot(x, type = "o", col = "red", main = "Number of Articles Bought Line Chart",xlab = "Month", ylab = "Articles", ylim = c(0,40),xlim = c(0,12) )
plot(x, type = "o", col = "red", main = "Number of Articles Bought Line Chart",xlab = "Month", ylab = "Articles", ylim = c(0,40),xlim = c(1,12) )
#1
10*3
#2
x=5
x*10
#3
y<-c(1,2,3,4,5)
a=y+3
y
a
y;a
#4
z<-c(10,12,3,50,7,31)
z>10
#5
b<-c(20,25,30,35,40,45,50)
b
min(b)
max(b)
mean(b)
median(b)
sum(b)
sd(b)
var(b)
length(b)
#6
?factorial
xx=12
factorial(xx)
#7
?round
yy<-152.2389413862
options(digits = 10)
round(yy,1)
round(yy,2)
round(yy,7)
#8
zz=1734
zz%/%6
zz%%6
#9
A<-c(21,49,160,72,86,356,55,67,91,30)
length(A)
A[6]
head(A,4);tail(A,4)
A[A>100]
#10
B<-c(1,2,3,4,5,6,7,8)
sort(B)
sort(B,decreasing = TRUE )
#11
C<-sample(-50:+50,10)
C
#correlation between two variables
data("abalone")
install.packages("AppliedPredictiveModeling")
library("AppliedPredictiveModeling")
data("abalone")
attach(abalone) #attaching this data set to find correlation between two variables
head(abalone)
cor(abalone[-1]) #removing 1st column because it is having categorical value
#corrplot function
install.packages("corrplot")
library("corrplot")
corrplot(cor(abalone[-1]),t1.col = "red") #ploting a diagram for given
#chart-correlative function
install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(abalone[-1],histogram = TRUE) #getting histograms
#simple linear regression
?lm()
model<- lm(abalone$Rings~abalone$LongestShell) #output the beta0 & beta1
model
summary(model) #getting anova table
#without intercept
model1<-lm(abalone$Rings~abalone$LongestShell-1)
model1
summary(model1)
#multiple linear regression
model3<-lm(abalone$Rings~abalone$LongestShell+abalone$Height)
model3
summary(model3)
#Q1-a
data(iris)
str(iris)
#Q1-b
head(iris, 4)
#Q1-c
summary(iris)
#Q1-d
hist(iris$Petal.Length, main = "Histogram of Petal Length", xlab = "Values", ylab = "Frequency", xlim = c(0,7), ylim = c(0,50),breaks = 7, col = terrain.colors(7) )
#Q1-e
boxplot(iris$Petal.Width, main = "Box plot for Petal Width", ylab="Values",  border = "red", notch = TRUE, varwidth = TRUE )
#Q2-a
x<-c(17,15,22,24,13,20,25,12,38,32,14,15)
y<-c("January","February","March","April","May","June","July","August","September","October","November","December")
barplot(x, main = "Number of Articles Bought Chart", xlab = "Month", ylab = "Articles",names.arg = y,  col = rainbow(length(x)), ylim = c(0,40))
plot(x, type = "o", col = "red", main = "Number of Articles Bought Line Chart",xlab = "Month", ylab = "Articles", ylim = c(0,40),xlim = c(1,12) )
#Q2-b
piepercent<-round(100*x/sum(x), 1)
lbl<-paste(paste(y,piepercent), "%", sep="")
pie(x, main = "Number of Articles Bought Pie Chart", clockwise = TRUE,labels = lbl ,radius = 0.8, col = heat.colors(length(x)) )
#Q3-a
data(mtcars)
str(mtcars)
boxplot(mtcars$mpg~mtcars$cyl, main = "Box plot for MPG based on no. of cylinders",xlab = "No of Cylinders", ylab = "MPG", col = c("yellow","green","purple") )
#correlation between two variables
data("abalone")
install.packages("AppliedPredictiveModeling")
library("AppliedPredictiveModeling")
data("abalone")
attach(abalone) #attaching this data set to find correlation between two variables
head(abalone)
cor(abalone[-1]) #removing 1st column because it is having categorical value
#corrplot function
install.packages("corrplot")
library("corrplot")
corrplot(cor(abalone[-1]),t1.col = "red") #ploting a diagram for given
#chart-correlative function
install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(abalone[-1],histogram = TRUE) #getting histograms
#simple linear regression
?lm()
model<- lm(abalone$Rings~abalone$LongestShell) #output the beta0 & beta1
model
summary(model) #getting anova table
#without intercept
model1<-lm(abalone$Rings~abalone$LongestShell-1)
model1
summary(model1)
#multiple linear regression
model3<-lm(abalone$Rings~abalone$LongestShell+abalone$Height)
model3
summary(model3)
